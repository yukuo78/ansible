- name: uninstall an exiting certbot version
  ansible.windows.win_file:
    path: C:\Program Files\Certbot
    state: absent
  tags: [never, uninstall]

- name: Create installation Temp directory 
  ansible.windows.win_file:
    path: C:\Temp
    state: directory

- name: Create working Temp directory 
  ansible.windows.win_file:
    path: "{{working_dir_base}}"
    state: directory

- name: Make sure hostname file exist
  ansible.windows.win_file:
    path: "{{working_dir_base}}\\hostname"
    state: touch

- name: Create working Temp directory 
  community.windows.win_lineinfile:
    path: "{{working_dir_base}}\\hostname"
    line: "hostname {{default_zone}}"

- name: Copy a installer file, keep a backup
  ansible.windows.win_copy:
    src: "{{ installer_exe }}"
    dest: C:\Temp\{{installer_exe }}
    backup: yes

- name: Test previous version
  ansible.windows.win_command:
    cmd: certbot --version
  register: pre_version_output
  ignore_errors: yes

- name: set version flag
  set_fact:
    old_version_exist: 1
  when: pre_version_output.rc == 0

- name: Run the installer executable with the '/S' argument to avoid GUI interaction
  ansible.windows.win_command:
    cmd: C:\Temp\{{installer_exe}} /S
    creates: C:\Program Files\Certbot
  when: old_version_exist is undefined or (forece_isntall is defined and forece_isntall)
  tags: install

- name: Run the installed tool
  ansible.windows.win_command:
    cmd: certbot --version
  register: version_output

- name: show output of version for new installation
  debug:
    var: version_output.stdout

- name: get hostname from win command
  ansible.windows.win_command:
    cmd: hostname
  register: hostname_output

- name: set host fqdn
  set_fact:
    host_fqdn: "{{hostname_output.stdout | trim}}"

- name: set host fqdn with default zone
  set_fact:
    host_fqdn: "{{hostname_output.stdout | trim}}.{{default_zone}}"
  when: hostname_output.stdout.find('.') == -1

- name: Run the installed tool
  ansible.windows.win_command:
    cmd: certbot certonly -d {{host_fqdn}} --server {{ certbot_server_url }}  --standalone --work-dir {{certbot_work_dir}} --logs-dir {{certbot_logs_dir}} --config-dir {{certbot_config_dir}} -m support@keychest.net --agree-tos --eff-email -v
  register: create_cert_result
  ignore_errors: yes

- name: collect error log
  ansible.builtin.fetch:
    src: C:\\keychest\\log\\letsencrypt.log
    dest: ./error.log
